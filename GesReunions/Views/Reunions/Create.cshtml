@model GesReunions.Models.Reunions

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Reunions</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Titre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Titre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Titre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Heures, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Heures, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Heures, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lieu, "Lieu", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Lieu", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Lieu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Sélectionnez les utilisateurs :", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" id="utilisateurEmail" class="form-control" />
                <div id="selectedUsers"></div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <link href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" rel="stylesheet" />
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>
        $(function () {
            $("#utilisateurEmail").autocomplete({
                source: function (request, response) {
                   @* $.ajax({
                        url: '@Url.Action("GetUserEmails", "Reunions")',
                        dataType: "json",
                        data: {
                            term: request.term
                        },
                        success: function (data) {
                            response(data);
                        }
                    });*@
                    $.ajax({
                        type: "POST",
                        url: "/Reunions/GetUserEmails",
                        data: { term: request.term },
                        success: function (data) {
                            console.log(data);
                            var formattedData = $.map(data, function (item) {
                                return {
                                    label: item.Email, // Affiche l'email
                                    value: item.Email, // La valeur est également l'email
                                    id: item.Id // Ajoute l'ID pour l'utilisation dans la sélection
                                };
                            });
                            response(formattedData);
                        }
                    });
                },
                select: function (event, ui) {
                    console.log('Selected item:', ui.item); // Affiche l'objet complet
                    var selectedEmail = ui.item.value; // Utilisez value (qui est l'email)
                    var selectedId = ui.item.id; // Utilisez id

                    console.log('Selected Email:', selectedEmail); // Affiche l'email sélectionné
                    console.log('Selected ID:', selectedId); // Affiche l'ID sélectionné

                    if ($("#selectedUsers input[value='" + selectedId + "']").length === 0) {
                        $("#selectedUsers").append('<div class="selected-email">' + selectedEmail + '<input type="hidden" name="utilisateursSelectionnes" value="' + selectedId + '" /></div>');
                    }
                    $(this).val('');
                    return false;
                }
            });
        });
    </script>
}
